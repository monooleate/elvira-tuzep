---
import Layout from '../../../layouts/PageLayout.astro'
import productsData from '../../../data/products.json'
import ProductInteractiveBlock from '~/components/common/ProductInteractiveBlock.jsx';
import ProductGallery from '~/components/widgets/ProductGallery.tsx';

function formatPrice(value) {
  return typeof value === 'number' ? value.toLocaleString('hu-HU') : '';
}

export async function getStaticPaths() {
  const paths = [];
  for (const category of productsData) {
    for (const product of category.products) {
      paths.push({
        params: {
          kategoria: category.slug,
          slug: product.slug,
        },
      });
    }
  }
  return paths;
}

const { params } = Astro;

const category = productsData.find((c) => c.slug === params.kategoria);
if (!category) throw new Error(`Nincs ilyen kategória: ${params.kategoria}`);

const product = category.products.find((p) => p.slug === params.slug);
if (!product) throw new Error(`Nincs ilyen termék: ${params.slug}`);

const now = new Date();
const hasPrice = typeof product.price === 'number' && product.price > 0;

const discountUntil = product.discountValidUntil ? new Date(product.discountValidUntil) : null;
const hasTimeValid = discountUntil && discountUntil > now;

const hasValidDiscountPrice =
  typeof product.discountPrice === 'number' &&
  product.discountPrice > 0 &&
  product.discountPrice < product.price &&
  hasTimeValid;

const hasValidDiscountPercent =
  typeof product.discountPercent === 'number' &&
  product.discountPercent > 0 &&
  product.discountPercent < 100 &&
  hasTimeValid;

const hasDiscount = (hasValidDiscountPrice || hasValidDiscountPercent) && hasTimeValid;

// Ár számítás
const discountPrice = hasValidDiscountPrice
  ? product.discountPrice
  : (hasValidDiscountPercent
      ? Math.round(product.price * (1 - product.discountPercent / 100))
      : null);

const discountPercent = hasValidDiscountPercent
  ? product.discountPercent
  : (hasValidDiscountPrice && discountPrice
      ? Math.round((1 - discountPrice / product.price) * 100)
      : null);

const discountPercentView = parseFloat(Number(discountPercent).toFixed(1));

// m ár csak akkor változik, ha van érvényes százalékos kedvezmény
const hasMPrice = typeof product.mprice === 'number' && product.mprice > 0;
const discountMPrice = hasMPrice && hasValidDiscountPercent
  ? Math.round(product.mprice * (1 - product.discountPercent / 100))
  : product.mprice;

// m2 ár is csak akkor változik, ha van érvényes százalékos kedvezmény
const hasM2Price = typeof product.m2price === 'number' && product.m2price > 0;
const discountM2Price = hasM2Price && hasValidDiscountPercent
  ? Math.round(product.m2price * (1 - product.discountPercent / 100))
  : product.m2price;

// m3 ár csak akkor változik, ha van érvényes százalékos kedvezmény
const hasM3Price = typeof product.m3price === 'number' && product.m3price > 0;
const discountM3Price = hasM3Price && hasValidDiscountPercent
  ? Math.round(product.m3price * (1 - product.discountPercent / 100))
  : product.m3price;

// raklap ár is csak akkor változik, ha van érvényes százalékos kedvezmény
const hasPalPrice = typeof product.palprice === 'number' && product.palprice > 0;
const discountPalPrice = hasPalPrice && hasValidDiscountPercent
  ? Math.round(product.palprice * (1 - product.discountPercent / 100))
  : product.palprice;


const images = Array.isArray(product.images)
  ? product.images.map(img => `https://elviratuzep.hu${img.src}`)
  : product.image
  ? [`https://elviratuzep.hu${product.image}`]
  : [];

const metadata = {
  title: product.meta.title,
  description: product.meta.description,
  openGraph: {
    images: images,
  },
  twitter: {
    image: images.length > 0 ? images[0] : '', // Twitter csak egy képet enged
  },
};

const relatedProducts = category.products
  .filter((p) => p.slug !== product.slug)
  .slice(0, 3);

const STORE_ID = "https://elviratuzep.hu/#store";

// --- helper: null/üres mezők kiszűrése ---
function pruneNulls(obj) {
  if (Array.isArray(obj)) {
    const arr = obj.map(pruneNulls).filter(v => v !== undefined);
    return arr.length ? arr : undefined;
  }
  if (obj && typeof obj === 'object') {
    const out = {};
    for (const [k, v] of Object.entries(obj)) {
      const pv = pruneNulls(v);
      if (pv !== undefined && pv !== null && !(Array.isArray(pv) && pv.length === 0)) out[k] = pv;
    }
    return Object.keys(out).length ? out : undefined;
  }
  return (obj === null || obj === undefined) ? undefined : obj;
}

// Ajánlott: a product.shippingDetails-ből áttöltjük a méreteket Product-szintre
function buildProductDimensions(p) {
  const sd = p?.shippingDetails;
  if (!sd) return undefined;
  const out = {};
  if (typeof sd.depth === 'number') out.depth = { "@type":"QuantitativeValue", value: sd.depth, unitText:"cm" };
  if (typeof sd.width === 'number') out.width = { "@type":"QuantitativeValue", value: sd.width, unitText:"cm" };
  if (typeof sd.height === 'number') out.height = { "@type":"QuantitativeValue", value: sd.height, unitText:"cm" };
  return Object.keys(out).length ? out : undefined;
}

// Offer alá CSAK a shippingWeight-et visszük (ha megadtad a JSON-ban)
function buildOfferShippingDetails(p) {
  const w = p?.shippingDetails?.shippingWeight;
  if (typeof w === 'number') {
    return {
      "@type": "OfferShippingDetails",
      "shippingWeight": { "@type":"QuantitativeValue", "value": w, "unitText":"kg" }
    };
  }
  return undefined;
}

// Darabár felirat: hossz CSAK a specs-ből (nem számolunk)
function buildPieceOfferName(baseName, p) {
  const len = p?.specs?.["Hossz"] || p?.specs?.["Hossz (darab)"];
  return len ? `${baseName} – darabár (${len})` : `${baseName} – darabár`;
}

const productDims = buildProductDimensions(product);
const offerShip = buildOfferShippingDetails(product);


// --- helper: csak ha kell ---
const isNonEmptyStr = (v) => typeof v === 'string' && v.trim().length > 0;

// CATEGORY a Breadcrumb logikája szerint
const categoryForSchema = (() => {
  if (Array.isArray(product.categoryPath) && product.categoryPath.length) {
    return product.categoryPath.filter(isNonEmptyStr).join(" > ");
  }
  const parts = ["Termékek"];
  if (isNonEmptyStr(category?.category)) parts.push(category.category.trim());
  return parts.join(" > ");
})();

// MATERIAL csak ha meg van adva
const materialForSchema = isNonEmptyStr(product.material) ? product.material.trim() : null;

// --- brand, audience, sameAs (Wikipédiát NE tegyük sameAs-be) ---
const brand =
  product.brandName
    ? pruneNulls({ "@type": "Brand", "name": product.brandName, "sameAs": product.brandUrl ? [product.brandUrl] : null })
    : { "@type": "Brand", "name": "Elvira Tüzép" };

const audienceBlock = Array.isArray(product.audience) && product.audience.length
  ? { "@type":"Audience", "audienceType": product.audience }
  : { "@type":"Audience", "audienceType": ["kivitelezők","asztalosok","építtetők"] };

const sameAsClean = Array.isArray(product.sameAs)
  ? product.sameAs.filter(u => !/wikipedia\.org|wikidata\.org/i.test(u))
  : [];


let calc_shippingWeight = null

function getShippingDetails(product) {
  const sd = product.shippingDetails;
  if (!sd) return undefined;

  calc_shippingWeight=sd.shippingWeight

  const hasAny =
    typeof sd.shippingWeight === 'number' ||
    typeof sd.depth === 'number' ||
    typeof sd.width === 'number' ||
    typeof sd.height === 'number';

  if (!hasAny) return undefined;

  return {
    "@type": "OfferShippingDetails",
    ...(typeof sd.depth === 'number' && {
      depth: {
        "@type": "QuantitativeValue",
        value: sd.depth,
        unitText: "cm"
      }
    }),
    ...(typeof sd.width === 'number' && {
      width: {
        "@type": "QuantitativeValue",
        value: sd.width,
        unitText: "cm"
      }
    }),
    ...(typeof sd.height === 'number' && {
      height: {
        "@type": "QuantitativeValue",
        value: sd.height,
        unitText: "cm"
      }
    })
  };
}

const shipping = getShippingDetails(product);

function specsToAdditionalProperty(specs) {
  if (!specs || typeof specs !== 'object') return undefined;
  const entries = Object.entries(specs)
    .filter(([_, v]) => v !== null && v !== undefined && String(v).trim() !== '');
  if (!entries.length) return undefined;
  return entries.map(([name, value]) => ({
    "@type": "PropertyValue",
    name,
    value
  }));
}

const additionalProperty = specsToAdditionalProperty(product.specs);


const schemaProduct = pruneNulls({
  "@context": "https://schema.org",
  "@type": "Product",
  "@id": `https://elviratuzep.hu/termekek/${category.slug}/${product.slug}#product`,
  "inLanguage": "hu",
  "url": `https://elviratuzep.hu/termekek/${category.slug}/${product.slug}`,
  "name": product.name,
  "image": images,
  "description": product.description,
  "sku": product.sku,
  ...(product.mpn ? { "mpn": product.mpn } : {}),
  ...(product.gtin13 ? { "gtin13": product.gtin13 } : {}),
  "brand": brand,
  "seller": { "@id": STORE_ID },
  "category": categoryForSchema,
  ...(materialForSchema ? { "material": materialForSchema } : {}),
  "audience": audienceBlock,
  ...(sameAsClean.length ? { "sameAs": sameAsClean } : {}),
  ...(additionalProperty ? { "additionalProperty": additionalProperty } : {}),
  ...(productDims || {}),
  ...(product.aggregateRating ? {
    "aggregateRating": {
      "@type": "AggregateRating",
      "ratingValue": product.aggregateRating.ratingValue,
      "reviewCount": product.aggregateRating.reviewCount
    }
  } : {}),
  "offers": pruneNulls([
    (typeof product.price === "number" && product.price > 0) ? pruneNulls({
      "@type": "Offer",
      "priceCurrency": "HUF",
      "price": hasDiscount && discountPrice ? discountPrice : product.price,
      "availability": product.stock > 0 ? "https://schema.org/InStock" : "https://schema.org/PreOrder",
      "url": `https://elviratuzep.hu/termekek/${category.slug}/${product.slug}`,
      "itemCondition": "https://schema.org/NewCondition",
      "name": buildPieceOfferName(product.name, product),
      "seller": { "@id": STORE_ID },
      "unitCode": "C62",
      "priceSpecification": {
        "@type": "UnitPriceSpecification",
        "price": hasDiscount && discountPrice ? discountPrice : product.price,
        "priceCurrency": "HUF",
        "unitCode": "C62"
      },
      ...(hasDiscount && product.discountValidUntil ? {
        "validThrough": product.discountValidUntil,
        "priceValidUntil": product.discountValidUntil
      } : {}),
    }) : null,

    (typeof product.mprice === "number" && product.mprice > 0) ? pruneNulls({
      "@type": "Offer",
      "priceCurrency": "HUF",
      "price": hasValidDiscountPercent
        ? Math.round(product.mprice * (1 - (discountPercent ?? 0) / 100))
        : product.mprice,
      "availability": product.stock > 0 ? "https://schema.org/InStock" : "https://schema.org/PreOrder",
      "url": `https://elviratuzep.hu/termekek/${category.slug}/${product.slug}`,
      "itemCondition": "https://schema.org/NewCondition",
      "name": `${product.name} – méterár`,
      "seller": { "@id": STORE_ID },
      "unitCode": "MTR",
      "priceSpecification": {
        "@type": "UnitPriceSpecification",
        "price": hasValidDiscountPercent
          ? Math.round(product.mprice * (1 - (discountPercent ?? 0) / 100))
          : product.mprice,
        "priceCurrency": "HUF",
        "unitCode": "MTR"
      },
      ...(hasValidDiscountPercent && product.discountValidUntil ? {
        "validThrough": product.discountValidUntil,
        "priceValidUntil": product.discountValidUntil
      } : {})
    }) : null,

    (typeof product.m2price === "number" && product.m2price > 0) ? pruneNulls({
      "@type": "Offer",
      "priceCurrency": "HUF",
      "price": hasValidDiscountPercent
        ? Math.round(product.m2price * (1 - (discountPercent ?? 0) / 100))
        : product.m2price,
      "availability": product.stock > 0 ? "https://schema.org/InStock" : "https://schema.org/PreOrder",
      "url": `https://elviratuzep.hu/termekek/${category.slug}/${product.slug}`,
      "itemCondition": "https://schema.org/NewCondition",
      "name": `${product.name} – négyzetméterár`,
      "seller": { "@id": STORE_ID },
      "unitCode": "MTK",
      "priceSpecification": {
        "@type": "UnitPriceSpecification",
        "price": hasValidDiscountPercent
          ? Math.round(product.m2price * (1 - (discountPercent ?? 0) / 100))
          : product.m2price,
        "priceCurrency": "HUF",
        "unitCode": "MTK"
      },
      ...(hasValidDiscountPercent && product.discountValidUntil ? {
        "validThrough": product.discountValidUntil,
        "priceValidUntil": product.discountValidUntil
      } : {})
    }) : null,

    (typeof product.m3price === "number" && product.m3price > 0) ? pruneNulls({
      "@type": "Offer",
      "priceCurrency": "HUF",
      "price": hasValidDiscountPercent
        ? Math.round(product.m3price * (1 - (discountPercent ?? 0) / 100))
        : product.m3price,
      "availability": product.stock > 0 ? "https://schema.org/InStock" : "https://schema.org/PreOrder",
      "url": `https://elviratuzep.hu/termekek/${category.slug}/${product.slug}`,
      "itemCondition": "https://schema.org/NewCondition",
      "name": `${product.name} – köbméterár`,
      "seller": { "@id": STORE_ID },
      "unitCode": "MTQ",
      "priceSpecification": {
        "@type": "UnitPriceSpecification",
        "price": hasValidDiscountPercent
          ? Math.round(product.m3price * (1 - (discountPercent ?? 0) / 100))
          : product.m3price,
        "priceCurrency": "HUF",
        "unitCode": "MTQ"
      },
      ...(hasValidDiscountPercent && product.discountValidUntil ? {
        "validThrough": product.discountValidUntil,
        "priceValidUntil": product.discountValidUntil
      } : {})
    }) : null,

    (typeof product.palprice === "number" && product.palprice > 0) ? pruneNulls({
      "@type": "Offer",
      "priceCurrency": "HUF",
      "price": hasValidDiscountPercent
        ? Math.round(product.palprice * (1 - (discountPercent ?? 0) / 100))
        : product.palprice,
      "availability": product.stock > 0 ? "https://schema.org/InStock" : "https://schema.org/PreOrder",
      "url": `https://elviratuzep.hu/termekek/${category.slug}/${product.slug}`,
      "itemCondition": "https://schema.org/NewCondition",
      "name": `${product.name} – raklapár`,
      "seller": { "@id": STORE_ID },
      "unitCode": "C62",
      "priceSpecification": {
        "@type": "UnitPriceSpecification",
        "price": hasValidDiscountPercent
          ? Math.round(product.palprice * (1 - (discountPercent ?? 0) / 100))
          : product.palprice,
        "priceCurrency": "HUF",
        "unitCode": "C62",
        "unitText":"raklap"
      },
      ...(hasValidDiscountPercent && product.discountValidUntil ? {
        "validThrough": product.discountValidUntil,
        "priceValidUntil": product.discountValidUntil
      } : {})
    }) : null
  ])
});

const schemaBreadcrumb = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": [
    {
      "@type": "ListItem",
      "position": 1,
      "name": "Főoldal",
      "item": "https://elviratuzep.hu/"
    },
    {
      "@type": "ListItem",
      "position": 2,
      "name": "Termékek",
      "item": "https://elviratuzep.hu/termekek"
    },
    {
      "@type": "ListItem",
      "position": 3,
      "name": category.category,
      "item": `https://elviratuzep.hu/termekek/${category.slug}`
    },
    {
      "@type": "ListItem",
      "position": 4,
      "name": product.name,
      "item": `https://elviratuzep.hu/termekek/${category.slug}/${product.slug}`
    }
  ]
};

---
<Layout metadata={metadata}>

{schemaProduct && (
  <script
    type="application/ld+json"
    set:html={JSON.stringify(schemaProduct)}
    slot="head"
  />
)}

{schemaBreadcrumb && (
  <script
    type="application/ld+json"
    set:html={JSON.stringify(schemaBreadcrumb)}
    slot="head"
  />
)}

  <section class="py-12">
    <div class="max-w-4xl mx-auto px-4">
<!-- Breadcrumb -->
<div class="sticky top-[70px] 2xl:top-[90px] z-20 bg-white dark:bg-gray-900 px-4 py-2 shadow-sm">
  <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between text-sm text-gray-500 dark:text-gray-400 mb-0">
    
    <nav class="mb-2 sm:mb-0" aria-label="Breadcrumb">
      <a href="/" class="hover:underline">Főoldal</a> /
      <a href="/termekek" class="hover:underline">Termékek</a> /
      <a href={`/termekek/${category.slug}`} class="hover:underline">{category.category}</a> /
      <span class="font-medium text-gray-800 dark:text-gray-200">{product.name}</span>
    </nav>

<!--     <a href={`/termekek/${category.slug}`} class="text-orange-500 hover:underline dark:text-blue-400">
      ← Vissza a kategóriaoldalra
    </a> -->
  </div>
</div>



      <!-- Termék adatblokk -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-10 pt-10 motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade
                intersect-once intersect-quarter intercept-no-queue">
        <div class="relative">
          {Array.isArray(product.images) ? (
            <>
              {/* ProductGallery mint island */}
              <ProductGallery client:visible product={product} />

              {/* Akció jelzők a galéria fölött */}
              {hasDiscount && discountPercent !== null && (
                <>
                  <div class="pointer-events-none absolute top-2 left-2 bg-red-600 text-white px-3 py-1 font-bold rounded shadow">
                    Akció
                  </div>
                  <div class="pointer-events-none absolute top-2 right-2 bg-red-600 text-white px-3 py-1 font-bold rounded shadow">
                    -{discountPercentView}%
                  </div>
                </>
              )}
            </>
          ) : (
            <>
              <img src={product.image} alt={product.name} class="rounded shadow w-full object-cover" />

              {hasDiscount && discountPercent !== null && (
                <>
                  <div class="absolute top-2 left-2 bg-red-600 text-white px-3 py-1 font-bold rounded shadow">
                    Akció
                  </div>
                  <div class="absolute top-2 right-2 bg-red-600 text-white px-3 py-1 font-bold rounded shadow">
                    -{discountPercentView}%
                  </div>
                </>
              )}
            </>
          )}
        </div>
        <div>
          <h1 class="text-3xl font-bold mb-2">{product.name}</h1>
          <p class="text-sm text-gray-500 dark:text-gray-400">Cikkszám: {product.sku}</p></br>
          <p class="text-gray-600 dark:text-gray-400 mb-4">{product.description}</p>
          
           {hasPrice && (
            <div class="text-lg font-semibold mb-4">
              {hasDiscount && discountPrice !== null ? (
                <>
                  Bruttó ár:
                  <span class="line-through text-gray-500 mr-2">{formatPrice(product.price)} Ft/db</span>
                  <span class="text-red-600 font-bold">{formatPrice(discountPrice)} Ft/db</span>
                </>
              ) : (
                `Bruttó ár: ${formatPrice(product.price)} Ft/db`
              )}
            </div>
          )}

          {hasMPrice && (
            <div class="font-semibold text-gray-700 dark:text-gray-300 mb-4">
              {hasDiscount && discountMPrice !== null ? (
                <>
                  Bruttó ár:
                  <span class="line-through text-gray-500 mr-2">{formatPrice(product.mprice)} Ft/m</span>
                  <span class="text-red-600 font-bold">{formatPrice(discountMPrice)} Ft/m</span>
                </>
              ) : (
                `Bruttó ár: ${formatPrice(product.mprice)} Ft/m`
              )}
            </div>
          )}

          {hasM2Price && (
            <div class="font-semibold text-gray-700 dark:text-gray-300 mb-4">
              Bruttó ár:
              {hasDiscount && discountM2Price !== null ? (
                <>
                  <span class="line-through text-gray-500 mr-2">{formatPrice(product.m2price)} Ft/m²</span>
                  <span class="ml-2 text-red-600 font-semibold">{formatPrice(discountM2Price)} Ft/m²</span>
                </>
              ) : (
                <span class="ml-2">{formatPrice(product.m2price)} Ft/m²</span>
              )}
            </div>
          )}
          
          {hasM3Price && (
            <div class="font-semibold text-gray-700 dark:text-gray-300 mb-4">
              Bruttó ár:
              {hasDiscount && discountM3Price !== null ? (
                <>
                  <span class="line-through text-gray-500 mr-2">{formatPrice(product.m3price)} Ft/m³</span>
                  <span class="ml-2 text-red-600 font-semibold">{formatPrice(discountM3Price)} Ft/m³</span>
                </>
              ) : (
                <span class="ml-2">{formatPrice(product.m3price)} Ft/m³</span>
              )}
            </div>
          )}

          {hasPalPrice && (
            <div class="font-semibold text-gray-700 dark:text-gray-300 mb-4">
              Bruttó ár:
              {hasDiscount && discountPalPrice !== null ? (
                <>
                  <span class="line-through text-gray-500 mr-2">{formatPrice(product.palprice)} Ft/raklap</span>
                  <span class="ml-2 text-red-600 font-semibold">{formatPrice(discountPalPrice)} Ft/raklap</span>
                </>
              ) : (
                <span class="ml-2">{formatPrice(product.palprice)} Ft/raklap</span>
              )}
            </div>
          )}

          <div>
            {product.stock > 0 ? (
              <span class="text-green-600">Raktáron</span>
            ) : (
              <span class="text-green-600">Rendelhető</span>
            )}
          </div>
          
          <ProductInteractiveBlock product={product} client:load />
        </div>
      </div>

      <!-- Leírás + Táblázat flex elrendezésben -->
      <div class="mt-10 flex flex-col md:flex-row gap-8">
        

        <!-- Műszaki adatok táblázat -->
        {product.specs && (
          <div class="md:w-1/2">
            <h2 class="text-xl font-bold mb-2">További információk</h2>
            <table class="w-full text-sm text-left border border-gray-300 dark:border-gray-600 overflow-hidden rounded-lg">
              <tbody>
                {Object.entries(product.specs).map(([label, value], index) => (
                  <tr class={`border-b ${index % 2 === 0 ? 'bg-gray-50 dark:bg-gray-800' : 'bg-white dark:bg-gray-700'}`}>
                    <th class="py-2 px-4 font-medium w-1/3 text-gray-700 dark:text-gray-200">{label}</th>
                    <td class="py-2 px-4 text-gray-600 dark:text-gray-300">{value}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        )}

        <!-- Hosszú leírás -->
        <div class="md:w-1/2">
        {product.longDescription && (
          <div>
            <h2 class="text-xl font-bold mb-2">Termékleírás</h2>
            <p class="text-gray-700 dark:text-gray-300 leading-relaxed">{product.longDescription}</p>
          </div>
        )}
        {product.longDescription2 && (
          <div class="mt-5">
            <p class="text-gray-700 dark:text-gray-300 leading-relaxed">{product.longDescription2}</p>
          </div>
        )}
        </div>
      </div>
    </div>
  </section>
       <!-- Kapcsolódó termékek blokk -->
{relatedProducts.length > 0 && (
  <section class="py-12 bg-white dark:bg-gray-900 motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade
                intersect-once intersect-quarter intercept-no-queue">
    <div class="max-w-4xl mx-auto px-4">
      <h2 class="text-2xl font-bold mb-6 text-center">Kapcsolódó termékek</h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {relatedProducts.map((product) => {
          const hasPercent = typeof product.discountPercent === 'number' && product.discountPercent > 0;
          const hasValidDiscountPrice = typeof product.discountPrice === 'number' && product.discountPrice > 0;
          const hasDiscount = hasPercent || hasValidDiscountPrice;

          const discountPrice = hasValidDiscountPrice
            ? product.discountPrice
            : (hasPercent
                ? Math.round(product.price * (1 - product.discountPercent / 100))
                : null);

          const discountPercent = hasPercent
            ? product.discountPercent
            : (hasValidDiscountPrice && product.price
                ? Math.round((1 - discountPrice / product.price) * 100)
                : null);

          const hasPrice = typeof product.price === 'number' && product.price > 0;
          const hasM2Price = typeof product.m2price === 'number' && product.m2price > 0;
          const hasM3Price = typeof product.m3price === 'number' && product.m3price > 0;

          const discountM2Price = hasM2Price && hasDiscount
            ? Math.round(product.m2price * (1 - (discountPercent ?? 0) / 100))
            : product.m2price;

          const discountM3Price = hasM3Price && hasDiscount
            ? Math.round(product.m3price * (1 - (discountPercent ?? 0) / 100))
            : product.m3price;

          return (
            <a href={`/termekek/${category.slug}/${product.slug}`} class="relative block border rounded-lg overflow-hidden shadow-sm hover:shadow-md transition bg-white dark:bg-gray-800 dark:border-gray-700">
              {hasDiscount && (
                <div class="absolute top-2 left-2 bg-red-600 text-white text-sm font-bold px-2 py-1 rounded z-10 shadow">
                  Akció
                </div>
              )}
              {hasDiscount && discountPercent !== null && (
                <div class="absolute top-2 right-2 bg-red-600 text-white text-sm font-extrabold px-3 py-1 rounded z-10 shadow">
                  -{discountPercent}%
                </div>
              )}

              <img src={product.image} alt={product.name} class="w-full h-48 object-cover" loading="lazy" />

              <div class="p-4">
                <h2 class="text-lg font-semibold text-gray-900 dark:text-white">{product.name}</h2>
                <p class="text-sm text-gray-600 dark:text-gray-400">{product.description}</p>

                <div class="mt-2 space-y-1">
                  {/* Darabár */}
                  {hasPrice && (
                    hasDiscount && discountPrice !== null ? (
                      <>
                        <p class="text-sm text-gray-500 line-through">{formatPrice(product.price)} Ft / db</p>
                        <p class="text-sm text-red-600 font-bold">{formatPrice(discountPrice)} Ft / db</p>
                      </>
                    ) : (
                      <p class="text-sm font-medium text-gray-800 dark:text-gray-300">{formatPrice(product.price)} Ft / db</p>
                    )
                  )}

                  {/* m² ár */}
                  {hasM2Price && (
                    hasDiscount && discountM2Price !== null ? (
                      <>
                        <p class="text-sm text-gray-500 line-through">{formatPrice(product.m2price)} Ft / m²</p>
                        <p class="text-sm text-red-600 font-bold">{formatPrice(discountM2Price)} Ft / m²</p>
                      </>
                    ) : (
                      <p class="text-sm font-medium text-gray-800 dark:text-gray-300">{formatPrice(product.m2price)} Ft / m²</p>
                    )
                  )}

                  {/* m³ ár */}
                  {hasM3Price && (
                    hasDiscount && discountM3Price !== null ? (
                      <>
                        <p class="text-sm text-gray-500 line-through">{formatPrice(product.m3price)} Ft / m³</p>
                        <p class="text-sm text-red-600 font-bold">{formatPrice(discountM3Price)} Ft / m³</p>
                      </>
                    ) : (
                      <p class="text-sm font-medium text-gray-800 dark:text-gray-300">{formatPrice(product.m3price)} Ft / m³</p>
                    )
                  )}
                </div>

                <div class="mt-1">
                  {product.stock > 0 ? (
                    <span class="text-green-600">Raktáron</span>
                  ) : (
                    <span class="text-green-600">Rendelhető</span>
                  )}
                </div>
              </div>
            </a>
          );
        })}
      </div>
    </div>
  </section>
)}

</Layout>
