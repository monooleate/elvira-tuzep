---
import Layout from '../../../layouts/PageLayout.astro';
import productsData from '../../../data/products.json';
import Metadata from '~/components/common/Metadata.astro';

export async function getStaticPaths() {
  return productsData.map((cat) => ({
    params: { kategoria: cat.slug },
  }));
}

const { params } = Astro;
const currentCategory = productsData.find((cat) => cat.slug === params.kategoria);

if (!currentCategory) {
  throw new Error(`A(z) "${params.kategoria}" kategória nem található.`);
}

const schemaCategoryList = {
  "@context": "https://schema.org",
  "@type": "ItemList",
  "name": currentCategory.category,
  "itemListElement": currentCategory.products.map((product, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "name": product.name,
    "item": `https://elviratuzep.hu/termekek/${currentCategory.slug}/${product.slug}`
  }))
};

const products = currentCategory.products;
const showDescription = !!currentCategory.description;

const metadata = {
  title: currentCategory.meta?.title ?? 'Termékek | ElviraTüzép',
  description: currentCategory.meta?.description ?? 'Fedezze fel termék kínálatunkat | BSH, KVH, gyalult fa, szárított fűrészáru, lambéria, brikett egy helyen. Minőségi termékek, gyors kiszállítással.',
  openGraph: {
    title: currentCategory.meta?.title ?? 'Termékek | ElviraTüzép',
    description: currentCategory.meta?.description ?? 'Fedezze fel termék kínálatunkat | BSH, KVH, gyalult fa, szárított fűrészáru, lambéria, brikett egy helyen. Minőségi termékek, gyors kiszállítással.',
    image: currentCategory.meta?.image ?? '/kategoriak/termekek_cover.jpg',
  },
  twitter: {
    title: currentCategory.meta?.title ?? 'Termékek | ElviraTüzép',
    description: currentCategory.meta?.description ?? 'Fedezze fel termék kínálatunkat | BSH, KVH, gyalult fa, szárított fűrészáru, lambéria, brikett egy helyen. Minőségi termékek, gyors kiszállítással.',
    image: currentCategory.meta?.image ?? '/kategoriak/termekek_cover.jpg',
  }
};
---

<Layout metadata={metadata}>
    {schemaCategoryList && (
    <script
        type="application/ld+json"
        slot="head"
        set:html={JSON.stringify(schemaCategoryList)}
    />
    )}

  <section class="py-12">
    <div class="container max-w-4xl mx-auto px-4">

      <!-- Breadcrumb -->
      <div class="sticky top-[70px] 2xl:top-[90px] z-20 bg-white dark:bg-gray-900 px-4 py-2 shadow-sm">
        <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between text-sm text-gray-500 dark:text-gray-400 mb-0">
          
          <nav class="mb-2 sm:mb-0" aria-label="Breadcrumb">
            <a href="/" class="hover:underline">Főoldal</a> /
            <a href="/termekek" class="hover:underline">Termékek</a> /
            <span class="font-medium text-gray-800 dark:text-gray-200">{currentCategory.category}</span>
          </nav>

      <!--     <a href="/termekek" class="text-orange-500 hover:underline dark:text-blue-400">
            ← Vissza a termékkategóriákhoz
          </a> -->
        </div>
      </div>

      <h1 class="text-3xl font-bold mb-6 pt-10">{currentCategory.category}</h1>

      {showDescription && (
        <p class="text-gray-700 dark:text-gray-300 mb-10 leading-relaxed max-w-3xl">
          {currentCategory.description}
        </p>
      )}

      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {products.map((product) => {
          const now = new Date();
          const discountUntil = product.discountValidUntil ? new Date(product.discountValidUntil) : null;
          const hasTimeValid = discountUntil && discountUntil > now;

          const hasPrice = typeof product.price === 'number' && product.price > 0;

          const hasValidDiscountPrice =
            typeof product.discountPrice === 'number' &&
            product.discountPrice > 0 &&
            product.discountPrice < product.price &&
            hasTimeValid;

          const hasValidDiscountPercent =
            typeof product.discountPercent === 'number' &&
            product.discountPercent > 0 &&
            product.discountPercent < 100 &&
            hasTimeValid;

          const hasDiscount = hasValidDiscountPrice || hasValidDiscountPercent;

          const discountPrice = hasValidDiscountPrice
            ? product.discountPrice
            : (hasValidDiscountPercent
                ? Math.round(product.price * (1 - product.discountPercent / 100))
                : null);

          const discountPercent = hasValidDiscountPercent
            ? product.discountPercent
            : (hasValidDiscountPrice && discountPrice
                ? Math.round((1 - discountPrice / product.price) * 100)
                : null);

          const discountPercentView = parseFloat(Number(discountPercent).toFixed(1));

          const hasMPrice = typeof product.mprice === 'number' && product.mprice > 0;
          const hasM2Price = typeof product.m2price === 'number' && product.m2price > 0;
          const hasM3Price = typeof product.m3price === 'number' && product.m3price > 0;
          const hasPalPrice = typeof product.palprice === 'number' && product.palprice > 0;

          const discountMPrice = hasMPrice && hasValidDiscountPercent
            ? Math.round(product.mprice * (1 - product.discountPercent / 100))
            : product.mprice;

          const discountM2Price = hasM2Price && hasValidDiscountPercent
            ? Math.round(product.m2price * (1 - product.discountPercent / 100))
            : product.m2price;

          const discountM3Price = hasM3Price && hasValidDiscountPercent
            ? Math.round(product.m3price * (1 - product.discountPercent / 100))
            : product.m3price;

          const discountPalPrice = hasPalPrice && hasValidDiscountPercent
            ? Math.round(product.palprice * (1 - product.discountPercent / 100))
            : product.palprice;

          return (
            <a href={`/termekek/${currentCategory.slug}/${product.slug}`} class="relative block border rounded-lg overflow-hidden shadow-sm hover:shadow-md transition bg-white dark:bg-gray-800 dark:border-gray-700">

              {/* Akció badge - BAL FELSŐ SAROK */}
              {hasDiscount && (
                <div class="absolute top-2 left-2 bg-red-600 text-white text-sm font-bold px-2 py-1 rounded z-10 shadow">
                  Akció
                </div>
              )}

              {/* Százalék badge - JOBB FELSŐ SAROK */}
              {hasDiscount && discountPercent !== null && (
                <div class="absolute top-2 right-2 bg-red-600 text-white text-sm font-extrabold px-3 py-1 rounded z-10 shadow">
                  -{discountPercentView}%
                </div>
              )}

<img
  src={
    Array.isArray(product.images)
      ? product.images[0]?.src
      : typeof product.image === 'object'
      ? product.image?.src
      : product.image
  }
  alt={
    Array.isArray(product.images)
      ? product.images[0]?.alt || product.name
      : typeof product.image === 'object'
      ? product.image?.alt || product.name
      : product.name
  }
  class="w-full h-48 object-cover"
  loading="lazy"
/>


              <div class="p-4">
                <h2 class="text-lg font-semibold text-gray-900 dark:text-white">{product.name}</h2>
                <p class="text-sm text-gray-600 dark:text-gray-400">{product.description}</p>

                <div class="mt-2 space-y-1">
                  {/* Darabár */}
                  {hasPrice && (
                    hasDiscount && discountPrice !== null ? (
                      <>
                        <p class="text-sm text-gray-500 line-through">{product.price.toLocaleString('hu-HU')} Ft / db</p>
                        <p class="text-sm text-red-600 font-bold">{discountPrice.toLocaleString('hu-HU')} Ft / db</p>
                      </>
                    ) : (
                      <p class="text-sm font-medium text-gray-800 dark:text-gray-300">{product.price.toLocaleString('hu-HU')} Ft / db</p>
                    )
                  )}

                  {/* m ár */}
                  {hasMPrice && (
                    hasValidDiscountPercent ? (
                      <>
                        <p class="text-sm text-gray-500 line-through">{product.mprice.toLocaleString('hu-HU')} Ft / m</p>
                        <p class="text-sm text-red-600 font-bold">{discountMPrice.toLocaleString('hu-HU')} Ft / m</p>
                      </>
                    ) : (
                      <p class="text-sm font-medium text-gray-800 dark:text-gray-300">{product.mprice.toLocaleString('hu-HU')} Ft / m</p>
                    )
                  )}

                  {/* m² ár */}
                  {hasM2Price && (
                    hasValidDiscountPercent ? (
                      <>
                        <p class="text-sm text-gray-500 line-through">{product.m2price.toLocaleString('hu-HU')} Ft / m²</p>
                        <p class="text-sm text-red-600 font-bold">{discountM2Price.toLocaleString('hu-HU')} Ft / m²</p>
                      </>
                    ) : (
                      <p class="text-sm font-medium text-gray-800 dark:text-gray-300">{product.m2price.toLocaleString('hu-HU')} Ft / m²</p>
                    )
                  )}

                  {/* m³ ár */}
                  {hasM3Price && (
                    hasValidDiscountPercent ? (
                      <>
                        <p class="text-sm text-gray-500 line-through">{product.m3price.toLocaleString('hu-HU')} Ft / m³</p>
                        <p class="text-sm text-red-600 font-bold">{discountM3Price.toLocaleString('hu-HU')} Ft / m³</p>
                      </>
                    ) : (
                      <p class="text-sm font-medium text-gray-800 dark:text-gray-300">{product.m3price.toLocaleString('hu-HU')} Ft / m³</p>
                    )
                  )}
                  
                  {/* raklap ár */}
                  {hasPalPrice && (
                    hasValidDiscountPercent ? (
                      <>
                        <p class="text-sm text-gray-500 line-through">{product.palprice.toLocaleString('hu-HU')} Ft / raklap</p>
                        <p class="text-sm text-red-600 font-bold">{discountPalPrice.toLocaleString('hu-HU')} Ft / raklap</p>
                      </>
                    ) : (
                      <p class="text-sm font-medium text-gray-800 dark:text-gray-300">{product.palprice.toLocaleString('hu-HU')} Ft / raklap</p>
                    )
                  )}
                </div>

                <div class="mt-1">
                  {product.stock > 0 ? (
                    <span class="text-green-600">Raktáron</span>
                  ) : (
                    <span class="text-orange-500">Rendelhető</span>
                  )}
                </div>
              </div>
            </a>
          );
        })}
      </div>
    </div>
  </section>
</Layout>
