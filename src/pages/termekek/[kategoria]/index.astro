---
import Layout from '../../../layouts/PageLayout.astro';
import productsData from '../../../data/products.json';
import Metadata from '~/components/common/Metadata.astro';

export async function getStaticPaths() {
  return productsData.map((cat) => ({
    params: { kategoria: cat.slug },
  }));
}

const { params } = Astro;
const currentCategory = productsData.find((cat) => cat.slug === params.kategoria);

if (!currentCategory) {
  throw new Error(`A(z) "${params.kategoria}" kategória nem található.`);
}

const schemaCategoryList = {
  "@context": "https://schema.org",
  "@type": "ItemList",
  "name": currentCategory.category,
  "itemListElement": currentCategory.products.map((product, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "name": product.name,
    "item": `https://elviratuzep.hu/termekek/${currentCategory.slug}/${product.slug}`
  }))
};

const products = currentCategory.products;
const showDescription = !!currentCategory.description;

const metadata = {
  title: currentCategory.meta?.title ?? 'Termékek – Gigawood',
  description: currentCategory.meta?.description ?? 'Fedezd fel faipari termékeink teljes kínálatát: gyalult fa, ragasztott gerendák, rétegelt lemezek és még sok más!',
  openGraph: {
    title: currentCategory.meta?.title ?? 'Termékek – Gigawood',
    description: currentCategory.meta?.description ?? 'Fedezd fel faipari termékeink teljes kínálatát: gyalult fa, ragasztott gerendák, rétegelt lemezek és még sok más!',
    image: currentCategory.meta?.image ?? '/kategoriak/termekek_cover.jpg',
  },
  twitter: {
    title: currentCategory.meta?.title ?? 'Termékek – Gigawood',
    description: currentCategory.meta?.description ?? 'Fedezd fel faipari termékeink teljes kínálatát: gyalult fa, ragasztott gerendák, rétegelt lemezek és még sok más!',
    image: currentCategory.meta?.image ?? '/kategoriak/termekek_cover.jpg',
  }
};
---

<Layout metadata={metadata}>
    {schemaCategoryList && (
    <script
        type="application/ld+json"
        slot="head"
        set:html={JSON.stringify(schemaCategoryList)}
    />
    )}

  <section class="py-12">
    <div class="container max-w-4xl mx-auto px-4">

      <!-- Breadcrumb -->
<div class="sticky top-[70px] 2xl:top-[90px] z-20 bg-white dark:bg-gray-900 px-4 py-2 shadow-sm">
  <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between text-sm text-gray-500 dark:text-gray-400 mb-0">
    
    <nav class="mb-2 sm:mb-0" aria-label="Breadcrumb">
      <a href="/" class="hover:underline">Főoldal</a> /
      <a href="/termekek" class="hover:underline">Termékek</a> /
      <span class="font-medium text-gray-800 dark:text-gray-200">{currentCategory.category}</span>
    </nav>

    <a href="/termekek" class="text-orange-500 hover:underline dark:text-blue-400">
      ← Vissza a termékkategóriákhoz
    </a>
  </div>
</div>

      <h1 class="text-3xl font-bold mb-6 pt-10">{currentCategory.category}</h1>

      {showDescription && (
        <p class="text-gray-700 dark:text-gray-300 mb-10 leading-relaxed max-w-3xl">
          {currentCategory.description}
        </p>
      )}

      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
{products.map((product) => {
const hasPrice = typeof product.price === 'number' && product.price > 0;
const hasPercent = typeof product.discountPercent === 'number' && product.discountPercent > 0;
const hasValidDiscountPrice = typeof product.discountPrice === 'number' && product.discountPrice > 0;

const hasDiscount = hasPercent || hasValidDiscountPrice;

const discountPrice = hasValidDiscountPrice
  ? product.discountPrice
  : (hasPercent ? Math.round(product.price * (1 - product.discountPercent / 100)) : null);

const discountPercent = hasPercent
  ? product.discountPercent
  : (hasValidDiscountPrice ? Math.round((1 - discountPrice / product.price) * 100) : null);

const hasM2Price = typeof product.m2price === 'number' && product.m2price > 0;
const hasM3Price = typeof product.m3price === 'number' && product.m3price > 0;

const discountM2Price = hasM2Price && hasDiscount
  ? Math.round(product.m2price * (1 - (discountPercent ?? 0) / 100))
  : product.m2price;

const discountM3Price = hasM3Price && hasDiscount
  ? Math.round(product.m3price * (1 - (discountPercent ?? 0) / 100))
  : product.m3price;

    return (
      <a href={`/termekek/${currentCategory.slug}/${product.slug}`} class="relative block border rounded-lg overflow-hidden shadow-sm hover:shadow-md transition bg-white dark:bg-gray-800 dark:border-gray-700">

        {/* Akció badge - BAL FELSŐ SAROK */}
        {hasDiscount && (
          <div class="absolute top-2 left-2 bg-red-600 text-white text-sm font-bold px-2 py-1 rounded z-10 shadow">
            Akció
          </div>
        )}

        {/* Százalék badge - JOBB FELSŐ SAROK */}
        {hasDiscount && discountPercent !== null && (
          <div class="absolute top-2 right-2 bg-red-600 text-white text-sm font-extrabold px-3 py-1 rounded z-10 shadow">
            -{discountPercent}%
          </div>
        )}

        <img src={product.image} alt={product.name} class="w-full h-48 object-cover" loading="lazy" />

        <div class="p-4">
          <h2 class="text-lg font-semibold text-gray-900 dark:text-white">{product.name}</h2>
          <p class="text-sm text-gray-600 dark:text-gray-400">{product.description}</p>

          <div class="mt-2 space-y-1">
  {/* Darabár */}
  {hasPrice && (
    hasDiscount && discountPrice !== null ? (
      <>
        <p class="text-sm text-gray-500 line-through">{product.price.toLocaleString()} Ft / db</p>
        <p class="text-sm text-red-600 font-bold">{discountPrice.toLocaleString()} Ft / db</p>
      </>
    ) : (
      <p class="text-sm font-medium text-gray-800 dark:text-gray-300">{product.price.toLocaleString()} Ft / db</p>
    )
  )}

  {/* m² ár */}
  {hasM2Price && (
    hasDiscount && discountM2Price !== null ? (
      <>
        <p class="text-sm text-gray-500 line-through">{product.m2price.toLocaleString()} Ft / m²</p>
        <p class="text-sm text-red-600 font-bold">{discountM2Price.toLocaleString()} Ft / m²</p>
      </>
    ) : (
      <p class="text-sm font-medium text-gray-800 dark:text-gray-300">{product.m2price.toLocaleString()} Ft / m²</p>
    )
  )}

  {/* m³ ár */}
  {hasM3Price && (
    hasDiscount && discountM3Price !== null ? (
      <>
        <p class="text-sm text-gray-500 line-through">{product.m3price.toLocaleString()} Ft / m³</p>
        <p class="text-sm text-red-600 font-bold">{discountM3Price.toLocaleString()} Ft / m³</p>
      </>
    ) : (
      <p class="text-sm font-medium text-gray-800 dark:text-gray-300">{product.m3price.toLocaleString()} Ft / m³</p>
    )
  )}
</div>

<div class="mt-1">
  {product.stock > 0 ? (
    <span class="text-green-600">Raktáron</span>
  ) : (
    <span class="text-orange-500">Rendelhető</span>
  )}
</div>


        </div>
      </a>
    );
  })}
</div>




    </div>
  </section>
</Layout>
